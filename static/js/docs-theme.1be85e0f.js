(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{"./src/docs/theme.mdx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return i}));var a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),r=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),o={},m="wrapper";function i(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)(m,Object.assign({},o,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"theming"},"Theming"),Object(r.b)("h2",{id:"create-a-custom-theme"},"Create a custom theme"),Object(r.b)("p",null,"The recommended way to create a custom theme is to create a file named ",Object(r.b)("inlineCode",{parentName:"p"},"theme.js"),", you can add your custom values and override existing ones."),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),'// theme.js\n\nexport default {\n  "color-primary": "red",\n  "btn-color": "var(--color-primary)"\n};\n')),Object(r.b)("h2",{id:"use-your-theme-in-your-application"},"Use your theme in your application"),Object(r.b)("p",null,"Pi-ui exposes an ",Object(r.b)("inlineCode",{parentName:"p"},"useTheme")," hook that accepts a ",Object(r.b)("inlineCode",{parentName:"p"},"theme")," argument. All CSS properties will be updated accordingly."),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),'import React from "react";\nimport { render } from "react-dom";\nimport { useTheme } from "pi-ui";\nimport theme from "./theme";\n\nconst App = () => {\n  useTheme(theme);\n  return (\n    // App jsx\n  )\n};\n\nrender(<App />, document.getElementById("root"));\n')),Object(r.b)("h2",{id:"default-theme"},"Default theme"),Object(r.b)("p",null,"There are two default themes, ",Object(r.b)("inlineCode",{parentName:"p"},"defaultLightTheme")," and ",Object(r.b)("inlineCode",{parentName:"p"},"defaultDarkTheme"),". They are both name exported from pi-ui."),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),'import { defaultLightTheme, defaultDarkTheme } from "pi-ui";\n')),Object(r.b)("h2",{id:"use-theme-property"},"Use theme property"),Object(r.b)("p",null,"You can use any property from a theme in your code:"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),'import React from "react";\nimport { useTheme, defaultLightTheme } from "pi-ui";\n\nconst Test = () => {\n  const theme = useTheme(defaultLightTheme);\n  /*\n  theme = {\n    "color-primary": "#2970ff",\n    "color-primary-dark": "#091440",\n    "color-primary-light": "#2ed8a3"\n    ...\n  }\n  */\n}\n')),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Note that you ",Object(r.b)("strong",{parentName:"li"},"have")," to pass a theme to ",Object(r.b)("inlineCode",{parentName:"li"},"useTheme")," everytime if you are using a custom theme, otherwise it will be set to the ",Object(r.b)("inlineCode",{parentName:"li"},"defaultLightTheme"),".")))}i&&i===Object(i)&&Object.isExtensible(i)&&Object.defineProperty(i,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/theme.mdx"}}),i.isMDXComponent=!0}}]);
//# sourceMappingURL=docs-theme.b4abcf2d3a7de3562210.js.map